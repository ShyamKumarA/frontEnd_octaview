{"version":3,"file":"static/js/1857.437770f3.chunk.js","mappings":"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","sources":["components/threeColumn/ThreeColumn.js","components/apps/contact/ContactListItem.js","components/apps/contact/ContactList.js","components/apps/contact/ContactSerch.js","components/apps/contact/ContactDetails.js","components/apps/contact/ContactAdd.js","components/apps/contact/ContactFilter.js","views/apps/contacts/Contacts.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\nimport { ToggleInnerRightPart } from '../../store/customizer/CustomizerSlice';\r\n\r\nconst ThreeColumn = ({ leftContent, middleContent, rightContent }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const isRightOpen = useSelector((state) => state.customizer.isInnerRightPart);\r\n\r\n  return (\r\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox threeColumn\">\r\n      <div className={`leftPart bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\r\n        <Button className=\"d-xl-none openCloseBtn\" color=\"danger\">\r\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\r\n        </Button>\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\r\n      </div>\r\n      <div className=\"middlePart flex-shrink-0\">\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{middleContent}</SimpleBar>\r\n      </div>\r\n      <div className={`rightPart bg-white ${isRightOpen ? 'showRightPart' : ''}`}>\r\n        <Button\r\n          close\r\n          onClick={() => dispatch(ToggleInnerRightPart())}\r\n          className=\"position-absolute closeRbtn d-lg-none\"\r\n        />\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{rightContent}</SimpleBar>\r\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nThreeColumn.propTypes = {\r\n  leftContent: PropTypes.node,\r\n  middleContent: PropTypes.node,\r\n  rightContent: PropTypes.node,\r\n};\r\n\r\nexport default ThreeColumn;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ToggleInnerRightPart } from '../../../store/customizer/CustomizerSlice';\r\n\r\nconst ContactListItem = ({\r\n  onContactClick,\r\n  onStarredClick,\r\n  onDeleteClick,\r\n  id,\r\n  firstname,\r\n  lastname,\r\n  image,\r\n  department,\r\n  starred,\r\n  active,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <NavItem\r\n      onClick={onContactClick}\r\n      className={`w-100 cursor-pointer ${active === id ? 'bg-light' : ''}`}\r\n    >\r\n      <div\r\n        className=\"d-flex align-items-center p-3 mb-1\"\r\n        onClick={() => dispatch(ToggleInnerRightPart())}\r\n      >\r\n        <div>\r\n          <img src={image} alt=\"user\" className=\"rounded-circle\" width=\"50\" />\r\n        </div>\r\n        <div className=\"mx-2 flex-grow-1\">\r\n          <h5 className=\"mb-0 text-truncate\" style={{ width: '140px' }}>\r\n            {firstname}&nbsp;\r\n            {lastname}\r\n          </h5>\r\n          <small>{department}</small>\r\n        </div>\r\n        <div className=\"d-flex flex-shrink-0\">\r\n          <i\r\n            className=\"bi bi-star-fill mx-2\"\r\n            onClick={onStarredClick}\r\n            style={{ color: starred ? '#FFC107' : '#495057' }}\r\n          />\r\n          <i onClick={onDeleteClick} className=\"bi bi-trash\" />\r\n        </div>\r\n      </div>\r\n    </NavItem>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  firstname: PropTypes.string,\r\n  lastname: PropTypes.string,\r\n  image: PropTypes.string,\r\n  department: PropTypes.string,\r\n  starred: PropTypes.bool,\r\n  id: PropTypes.number,\r\n  active: PropTypes.any,\r\n  onStarredClick: PropTypes.func,\r\n  onDeleteClick: PropTypes.func,\r\n  onContactClick: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Nav } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  SelectContact,\r\n  fetchContacts,\r\n  DeleteContact,\r\n  toggleStarredContact,\r\n} from '../../../store/apps/contacts/ContactSlice';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const getVisibleContacts = (contacts, filter, contactSearch) => {\r\n    switch (filter) {\r\n      case 'show_all':\r\n        return contacts.filter(\r\n          (c) => !c.deleted && c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'frequent_contact':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.frequentlycontacted &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'starred_contact':\r\n        return contacts.filter(\r\n          (c) => !c.deleted && c.starred && c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'engineering_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Engineering' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'support_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Support' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      case 'sales_department':\r\n        return contacts.filter(\r\n          (c) =>\r\n            !c.deleted &&\r\n            c.department === 'Sales' &&\r\n            c.firstname.toLocaleLowerCase().includes(contactSearch),\r\n        );\r\n\r\n      default:\r\n        throw new Error(`Unknown filter: ${filter}`);\r\n    }\r\n  };\r\n  const contacts = useSelector((state) =>\r\n    getVisibleContacts(\r\n      state.contactsReducer.contacts,\r\n      state.contactsReducer.currentFilter,\r\n      state.contactsReducer.contactSearch,\r\n    ),\r\n  );\r\n\r\n  const active = useSelector((state) => state.contactsReducer.contactContent);\r\n  console.log(active);\r\n  return (\r\n    <Nav>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          active={active}\r\n          {...contact}\r\n          onContactClick={() => dispatch(SelectContact(contact.id))}\r\n          onDeleteClick={() => dispatch(DeleteContact(contact.id))}\r\n          onStarredClick={() => dispatch(toggleStarredContact(contact.id))}\r\n        />\r\n      ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SearchContact } from '../../../store/apps/contacts/ContactSlice';\r\n\r\nconst ContactSearch = () => {\r\n  const searchTerm = useSelector((state) => state.contactsReducer.contactSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom d-flex\">\r\n      <Button close className=\"d-xs-block d-xl-none me-2\" />\r\n      <Form className=\"flex-grow-1\">\r\n        <Input\r\n          className=\"form-control mb-2\"\r\n          id=\"searchUser\"\r\n          name=\"searchUser\"\r\n          type=\"text\"\r\n          onChange={(e) => dispatch(SearchContact(e.target.value))}\r\n          value={searchTerm}\r\n          placeholder=\"Search Contact...\"\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactSearch;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Input } from 'reactstrap';\r\nimport { isEdit, UpdateContact } from '../../../store/apps/contacts/ContactSlice';\r\n\r\nconst ContactDetails = () => {\r\n  const contactDetail = useSelector(\r\n    (state) => state.contactsReducer.contacts[state.contactsReducer.contactContent - 1],\r\n  );\r\n\r\n  const editContact = useSelector((state) => state.contactsReducer.editContact);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      {contactDetail ? (\r\n        <div>\r\n          {/***********Contact Topbar**************/}\r\n          <div className=\"d-flex align-items-center p-3 border-bottom\">\r\n            <div className=\"\">\r\n              <img src={contactDetail.image} alt=\"user\" className=\"rounded-circle\" width=\"46\" />\r\n            </div>\r\n            <div className=\"mx-2\">\r\n              <h5 className=\"mb-0\">\r\n                {contactDetail.firstname} {contactDetail.lastname}\r\n              </h5>\r\n              <small>{contactDetail.department}</small>\r\n            </div>\r\n          </div>\r\n\r\n          {/***********Contact Edit box**************/}\r\n          <div className=\"p-4\">\r\n            {!editContact ? (\r\n              <table className=\"table table-borderless\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td width=\"150\">\r\n                      <h6>Firstname </h6>\r\n                    </td>\r\n                    <td>: {contactDetail.firstname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Lastname</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.lastname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Company</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.company}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Department</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.department}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Email</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.email}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Phone</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.phone}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Address</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.address}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <h6>Note</h6>\r\n                    </td>\r\n                    <td>: {contactDetail.notes}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td />\r\n                    <td>\r\n                      <Button color=\"primary\" onClick={() => dispatch(isEdit())}>\r\n                        Edit Contact\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              <>\r\n                {/***********Contact form box**************/}\r\n                <table className=\"table table-borderless align-middle\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td width=\"150\">\r\n                        <h6>Firstname </h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"firstName\"\r\n                          id=\"firstName\"\r\n                          value={contactDetail.firstname}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'firstname', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Lastname</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"lastname\"\r\n                          id=\"lastname\"\r\n                          value={contactDetail.lastname}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'lastname', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Company</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"company\"\r\n                          id=\"company\"\r\n                          value={contactDetail.company}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'company', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Department</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"department\"\r\n                          id=\"department\"\r\n                          value={contactDetail.department}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'department', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Email</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          value={contactDetail.email}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'email', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Phone</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"phone\"\r\n                          id=\"phone\"\r\n                          value={contactDetail.phone}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'phone', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Address</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"address\"\r\n                          id=\"address\"\r\n                          value={contactDetail.address}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'address', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h6>Note</h6>\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"notes\"\r\n                          id=\"notes\"\r\n                          value={contactDetail.notes}\r\n                          onChange={(e) =>\r\n                            dispatch(UpdateContact(contactDetail.id, 'notes', e.target.value))\r\n                          }\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td />\r\n                      <td>\r\n                        <Button color=\"success\" onClick={() => dispatch(isEdit())}>\r\n                          Save Contact\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        'Please Select The contact'\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Col,\r\n  Row,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n  Input,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport user1 from '../../../assets/images/users/user1.jpg';\r\nimport { addContact } from '../../../store/apps/contacts/ContactSlice';\r\n\r\nconst ContactAdd = ({ click }) => {\r\n  const id = useSelector((state) => state.contactsReducer.contacts.length);\r\n  const dispatch = useDispatch();\r\n  const [values, setValues] = React.useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    department: '',\r\n    company: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    notes: '',\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addContact(\r\n        id,\r\n        values.firstname,\r\n        values.lastname,\r\n        user1,\r\n        values.department,\r\n        values.company,\r\n        values.phone,\r\n        values.email,\r\n        values.address,\r\n        values.notes,\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <ModalBody>\r\n        <Row>\r\n          <Col md={6} className=\"text-center\">\r\n            <img src={user1} className=\"rounded-circle\" alt={id} width=\"100\" />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"firstName\">First Name</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"firstname\"\r\n                id=\"firstName\"\r\n                value={values.firstname}\r\n                onChange={(e) => setValues({ ...values, firstname: e.target.value })}\r\n                required\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lastName\">Last Name</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"lastname\"\r\n                id=\"lastName\"\r\n                value={values.lastname}\r\n                onChange={(e) => setValues({ ...values, lastname: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"department\">Department</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"department\"\r\n                id=\"department\"\r\n                value={values.department}\r\n                onChange={(e) => setValues({ ...values, department: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"company\">Company</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"company\"\r\n                id=\"company\"\r\n                value={values.company}\r\n                onChange={(e) => setValues({ ...values, company: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"phone\">Phone</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"phone\"\r\n                name=\"phone\"\r\n                id=\"phone\"\r\n                value={values.phone}\r\n                onChange={(e) => setValues({ ...values, phone: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={values.email}\r\n                onChange={(e) => setValues({ ...values, email: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"address\">Address</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                value={values.address}\r\n                onChange={(e) => setValues({ ...values, address: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label for=\"notes\">Notes</Label>\r\n              <Input\r\n                className=\"form-control\"\r\n                type=\"textarea\"\r\n                name=\"notes\"\r\n                id=\"notes\"\r\n                value={values.notes}\r\n                onChange={(e) => setValues({ ...values, notes: e.target.value })}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={click}\r\n          disabled={values.firstname.length === 0 || values.notes.length === 0}\r\n        >\r\n          Add Contact\r\n        </Button>\r\n      </ModalFooter>\r\n    </Form>\r\n  );\r\n};\r\n\r\nContactAdd.propTypes = {\r\n  click: PropTypes.any,\r\n};\r\n\r\nexport default ContactAdd;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListGroup, ListGroupItem, Button, Modal, ModalHeader } from 'reactstrap';\r\nimport { setVisibilityFilter } from '../../../store/apps/contacts/ContactSlice';\r\nimport ContactAdd from './ContactAdd';\r\n\r\nconst ContactFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const active = useSelector((state) => state.contactsReducer.currentFilter);\r\n  const [modal, setModal] = React.useState(false);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-3 border-bottom\">\r\n        <Button color=\"danger\" block onClick={toggle}>\r\n          Add New Contact\r\n        </Button>\r\n      </div>\r\n      <ListGroup flush>\r\n        <h6 className=\"px-3 pt-3\">Filter </h6>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'show_all' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('show_all'))}\r\n        >\r\n          <i className=\"bi bi-people mx-1\" /> All\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'frequent_contact' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('frequent_contact'))}\r\n        >\r\n          <i className=\"bi bi-bezier mx-1\" /> Frequent\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'starred_contact' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('starred_contact'))}\r\n        >\r\n          <i className=\"bi bi-star mx-1\" /> Starred\r\n        </ListGroupItem>\r\n        <div className=\"border-bottom py-2 mb-2\" />\r\n        <h6 className=\"px-3 pt-3\">Filter By Categories</h6>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={\r\n            active === 'engineering_department' ? 'bg-light py-3 border-0' : 'py-3 border-0'\r\n          }\r\n          onClick={() => dispatch(setVisibilityFilter('engineering_department'))}\r\n        >\r\n          <i className=\"bi bi-bookmark-star mx-1\" /> Engineering\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'support_department' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('support_department'))}\r\n        >\r\n          <i className=\"bi bi-bookmark-star mx-1\" /> Support\r\n        </ListGroupItem>\r\n        <ListGroupItem\r\n          href=\"#\"\r\n          tag=\"a\"\r\n          className={active === 'sales_department' ? 'bg-light py-3 border-0' : 'py-3 border-0'}\r\n          onClick={() => dispatch(setVisibilityFilter('sales_department'))}\r\n        >\r\n          <i className=\"bi bi-bookmark-star mx-1\" /> Sales\r\n        </ListGroupItem>\r\n      </ListGroup>\r\n      {/***********Contact Add Box**************/}\r\n      <Modal isOpen={modal} toggle={toggle} size=\"md\">\r\n        <ModalHeader toggle={toggle}>Add Contact</ModalHeader>\r\n        <ContactAdd click={toggle} />\r\n      </Modal>\r\n      {/***********Contact Add Box End**************/}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport ContactList from '../../../components/apps/contact/ContactList';\r\nimport ContactSearch from '../../../components/apps/contact/ContactSerch';\r\nimport ContactDetails from '../../../components/apps/contact/ContactDetails';\r\nimport ThreeColumn from '../../../components/threeColumn/ThreeColumn';\r\nimport ContactFilter from '../../../components/apps/contact/ContactFilter';\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <ThreeColumn\r\n          leftContent={<ContactFilter />}\r\n          middleContent={\r\n            <>\r\n              <ContactSearch />\r\n              <ContactList />\r\n            </>\r\n          }\r\n          rightContent={<ContactDetails />}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"],"names":["leftContent","middleContent","rightContent","React","isOpen","setIsOpen","dispatch","useDispatch","isRightOpen","useSelector","state","customizer","isInnerRightPart","className","color","onClick","style","height","close","ToggleInnerRightPart","onContactClick","onStarredClick","onDeleteClick","id","firstname","lastname","image","department","starred","active","src","alt","width","useEffect","fetchContacts","contacts","filter","contactSearch","c","deleted","toLocaleLowerCase","includes","frequentlycontacted","Error","getVisibleContacts","contactsReducer","currentFilter","contactContent","console","log","map","contact","SelectContact","DeleteContact","toggleStarredContact","searchTerm","name","type","onChange","e","SearchContact","target","value","placeholder","contactDetail","editContact","UpdateContact","company","email","phone","address","notes","isEdit","click","length","values","setValues","onSubmit","preventDefault","addContact","user1","md","for","required","disabled","modal","setModal","toggle","block","flush","href","tag","setVisibilityFilter","size","ThreeColumn"],"sourceRoot":""}