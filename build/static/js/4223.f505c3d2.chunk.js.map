{"version":3,"file":"static/js/4223.f505c3d2.chunk.js","mappings":"qKAiCA,IA5BkB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,EAA4BC,EAAAA,UAAe,GAA3C,eAAOC,EAAP,KAAeC,EAAf,KAMA,OACE,iBAAKC,UAAU,6DAAf,WACE,iBAAKA,UAAS,sDAAiDF,EAAS,eAAiB,IAAzF,WACE,SAAC,KAAD,CAAQE,UAAU,oCAAoCC,MAAM,SAA5D,UACE,cAAGD,UAAS,aAAQF,EAAS,OAAS,WAAaI,QARtC,WACnBH,GAAWD,SASP,SAAC,IAAD,CAAWK,MAAO,CAAEC,OAAQ,uBAA5B,SAAsDT,QAExD,iBAAKK,UAAU,YAAf,UACGJ,EACAE,GAAS,gBAAKE,UAAU,mBAAsB,W,wICKvD,EAvBqB,SAAC,GAAD,IAAGE,EAAH,EAAGA,QAASG,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,GAAIC,EAArC,EAAqCA,MAAOC,EAA5C,EAA4CA,OAA5C,OACnB,SAAC,KAAD,CAASP,QAASA,EAASF,UAAS,+BAA0BM,IAAWC,EAAK,WAAa,IAA3F,UACE,iBAAKP,UAAU,qCAAf,WACE,0BACE,gBAAKU,IAAKF,EAAOG,IAAI,OAAOX,UAAU,iBAAiBY,MAAM,UAE/D,iBAAKZ,UAAU,OAAf,WACE,eAAIA,UAAU,OAAd,SAAsBK,KACtB,2BAAQI,aC+BhB,EArCiB,WACf,IAAMI,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,SACR,CAACH,IAEJ,IAQMI,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OARN,SAACF,EAAOG,GAC1B,OAAIH,EACKA,EAAMI,QAAO,SAACC,GAAD,OAClBA,EAAEC,KAAKC,oBAAoBC,SAASL,EAAWI,wBAE5CP,EAIPS,CAAYP,EAAMQ,YAAYV,MAAOE,EAAMQ,YAAYP,eAEnDd,GAASY,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMQ,YAAYC,eAExD,OACE,SAAC,KAAD,CAAK5B,UAAU,GAAf,SACGiB,EAAMY,KAAI,SAACC,GAAD,OACT,SAAC,GAAD,kBAEMA,GAFN,IAGExB,OAAQA,EACRJ,QAAS,kBAAMW,GAASkB,EAAAA,EAAAA,IAAWD,EAAKvB,MACxCC,MAAOsB,EAAKtB,MACZC,OAAQqB,EAAKrB,OACbJ,YAAayB,EAAKP,KAClBS,YAAaF,EAAKG,UAPbH,EAAKvB,UCFpB,EAtBmB,WACjB,IAAM2B,GAAahB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMQ,YAAYP,cAEtDP,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKd,UAAU,oBAAf,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEA,UAAU,oBACVO,GAAG,aACHgB,KAAK,aACLY,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOxB,GAASyB,EAAAA,EAAAA,IAAWD,EAAEE,OAAOC,SAC9CA,MAAON,EACPO,YAAY,2B,WCoDtB,EAnEoB,WAClB,IAAMC,GAAcxB,EAAAA,EAAAA,KAClB,SAACC,GAAD,OAAWA,EAAMQ,YAAYV,MAAME,EAAMQ,YAAYC,YAAc,MAGrE,OACE,8BACGc,GACC,4BACE,iBAAK1C,UAAU,8CAAf,WACE,SAAC,KAAD,CAAQ2C,OAAK,EAAC3C,UAAU,+BACxB,gBAAKA,UAAU,GAAf,UACE,gBAAKU,IAAKgC,EAAYlC,MAAOG,IAAI,OAAOX,UAAU,iBAAiBY,MAAM,UAE3E,iBAAKZ,UAAU,OAAf,WACE,eAAIA,UAAU,OAAd,SAAsB0C,EAAYnB,QAClC,2BAAQmB,EAAYjC,gBAIxB,SAAC,IAAD,CAAWN,MAAO,CAAEC,OAAQ,uBAA5B,UACE,eAAIJ,UAAU,oBAAd,SACG4C,OAAOC,KAAKH,EAAYI,aAAajB,KAAI,SAACC,GAAD,OACxCc,OAAOC,KAAKH,EAAYI,YAAYhB,IAAOD,KAAI,SAACkB,GAAD,OAC7CH,OAAOC,KAAKH,EAAYI,YAAYhB,GAAMiB,IAAMlB,KAAI,SAACmB,GAAD,MAC5C,SAANA,GACE,gBAAIhD,UAAU,sCAAd,WACE,0BACE,gBACEU,IAAKgC,EAAYlC,MACjBG,IAAK+B,EAAYnB,KACjBX,MAAM,KACNZ,UAAU,sBAGd,gBAAKA,UAAU,OAAf,SACG0C,EAAYI,YAAYhB,GAAMiB,GAAKC,GAAGnB,KAAI,SAACoB,GAAD,OACzC,gBAAKjD,UAAU,4BAAf,SACGiD,GAD6CA,UAXGD,IAkBzD,eAAIhD,UAAU,gDAAd,UACE,yBACG0C,EAAYI,YAAYhB,GAAMiB,GAAKC,GAAGnB,KAAI,SAACoB,GAAD,OACzC,gBAAajD,UAAU,oCAAvB,SACGiD,GADOA,SAHmDD,oBAiBjF,4C,WCnBR,EA1CoB,WAClB,OAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACMvC,GAAWC,EAAAA,EAAAA,MAKXP,GAAKW,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMQ,YAAYC,eASpD,OACE,SAAC,KAAD,CAAMyB,SARgB,SAAChB,GACvBA,EAAEiB,iBACFjB,EAAEkB,kBACF1C,GAAS2C,EAAAA,EAAAA,IAAQjD,EAAI4C,IACrBC,EAAO,KAIyBK,OAAQzD,UAAU,uBAAlD,UACE,iBAAKA,UAAU,SAAf,WACE,SAAC,KAAD,CACEmC,KAAK,OACLnC,UAAU,oBACVyC,YAAY,oBACZL,SAnBoB,SAACC,GAC3Be,EAAOf,EAAEE,OAAOC,QAkBoBiB,KAAK,MACnCjB,MAAOW,EACPO,UAAQ,KAEV,SAAC,KAAD,CACExD,QAAS,WACPW,GAAS2C,EAAAA,EAAAA,IAAQjD,EAAI4C,IACrBC,EAAO,KAETnD,MAAM,UACN0D,UAAWR,EANb,UAQE,cAAGnD,UAAU,uB,UCVvB,EAvBa,WACX,OACE,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC4D,EAAA,EAAD,CACEjE,aACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,OAGJC,cACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD","sources":["components/twoColumn/TwoColumn.js","components/apps/chat/ChatListItem.js","components/apps/chat/ChatList.js","components/apps/chat/ChatSearch.js","components/apps/chat/ChatContent.js","components/apps/chat/ChatMsgForm.js","views/apps/chat/Chat.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nconst TwoColumn = ({ leftContent, rightContent }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox\">\r\n      <div className={`leftPart flex-shrink-0  bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\r\n        <Button className=\"d-lg-none d-md-block openCloseBtn\" color=\"danger\">\r\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\r\n        </Button>\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\r\n      </div>\r\n      <div className=\"rightPart\">\r\n        {rightContent}\r\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTwoColumn.propTypes = {\r\n  leftContent: PropTypes.node,\r\n  rightContent: PropTypes.node,\r\n};\r\n\r\nexport default TwoColumn;\r\n","import React from 'react';\r\nimport { NavItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChatListItem = ({ onClick, contactName, active, id, thumb, status }) => (\r\n  <NavItem onClick={onClick} className={`w-100 cursor-pointer ${active === id ? 'bg-light' : ''}`}>\r\n    <div className=\"d-flex align-items-center p-3 mb-1\">\r\n      <div>\r\n        <img src={thumb} alt=\"user\" className=\"rounded-circle\" width=\"50\" />\r\n      </div>\r\n      <div className=\"mx-3\">\r\n        <h5 className=\"mb-0\">{contactName}</h5>\r\n        <small>{status}</small>\r\n      </div>\r\n    </div>\r\n  </NavItem>\r\n);\r\n\r\nChatListItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  thumb: PropTypes.string,\r\n  active: PropTypes.any,\r\n  id: PropTypes.any,\r\n  contactName: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ChatListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Nav } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SelectChat, fetchChats } from '../../../store/apps/chat/ChatSlice';\r\nimport Chat from './ChatListItem';\r\n\r\nconst ChatList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchChats());\r\n  }, [dispatch]);\r\n\r\n  const filterChats = (chats, chatSearch) => {\r\n    if (chats)\r\n      return chats.filter((t) =>\r\n        t.name.toLocaleLowerCase().includes(chatSearch.toLocaleLowerCase()),\r\n      );\r\n    return chats;\r\n  };\r\n\r\n  const chats = useSelector((state) =>\r\n    filterChats(state.chatReducer.chats, state.chatReducer.chatSearch),\r\n  );\r\n  const active = useSelector((state) => state.chatReducer.chatContent);\r\n\r\n  return (\r\n    <Nav className=\"\">\r\n      {chats.map((chat) => (\r\n        <Chat\r\n          key={chat.id}\r\n          {...chat}\r\n          active={active}\r\n          onClick={() => dispatch(SelectChat(chat.id))}\r\n          thumb={chat.thumb}\r\n          status={chat.status}\r\n          contactName={chat.name}\r\n          chatExcerpt={chat.excerpt}\r\n        />\r\n      ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import React from 'react';\r\nimport { Form, Input } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SearchChat } from '../../../store/apps/chat/ChatSlice';\r\n\r\nconst ChatSearch = () => {\r\n  const searchTerm = useSelector((state) => state.chatReducer.chatSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom\">\r\n      <Form>\r\n        <Input\r\n          className=\"form-control mb-2\"\r\n          id=\"searchUser\"\r\n          name=\"searchUser\"\r\n          type=\"text\"\r\n          onChange={(e) => dispatch(SearchChat(e.target.value))}\r\n          value={searchTerm}\r\n          placeholder=\"Search Contact...\"\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSearch;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nconst ChatContent = () => {\r\n  const chatDetails = useSelector(\r\n    (state) => state.chatReducer.chats[state.chatReducer.chatContent - 1],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {chatDetails ? (\r\n        <div>\r\n          <div className=\"d-flex align-items-center p-3 border-bottom\">\r\n            <Button close className=\"d-xs-block d-lg-none me-2\" />\r\n            <div className=\"\">\r\n              <img src={chatDetails.thumb} alt=\"user\" className=\"rounded-circle\" width=\"46\" />\r\n            </div>\r\n            <div className=\"mx-2\">\r\n              <h5 className=\"mb-0\">{chatDetails.name}</h5>\r\n              <small>{chatDetails.status}</small>\r\n            </div>\r\n          </div>\r\n\r\n          <SimpleBar style={{ height: 'calc(100vh - 360px)' }}>\r\n            <ul className=\"list-unstyled p-4\">\r\n              {Object.keys(chatDetails.chatHistory).map((chat) =>\r\n                Object.keys(chatDetails.chatHistory[chat]).map((key) =>\r\n                  Object.keys(chatDetails.chatHistory[chat][key]).map((k) =>\r\n                    k === 'from' ? (\r\n                      <li className=\"chat-item d-flex align-items-center\" key={k}>\r\n                        <div>\r\n                          <img\r\n                            src={chatDetails.thumb}\r\n                            alt={chatDetails.name}\r\n                            width=\"50\"\r\n                            className=\"rounded-circle\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"px-3\">\r\n                          {chatDetails.chatHistory[chat][key][k].map((v) => (\r\n                            <div className=\"bg-light d-table p-2 mb-1\" key={v}>\r\n                              {v}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </li>\r\n                    ) : (\r\n                      <li className=\"flex-row-reverse text-end d-flex my-1 ms-auto\" key={k}>\r\n                        <div>\r\n                          {chatDetails.chatHistory[chat][key][k].map((v) => (\r\n                            <div key={v} className=\"p-2 d-table ms-auto bg-light mb-1\">\r\n                              {v}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </li>\r\n                    ),\r\n                  ),\r\n                ),\r\n              )}\r\n            </ul>\r\n          </SimpleBar>\r\n        </div>\r\n      ) : (\r\n        <div>Select chat</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sendMsg } from '../../../store/apps/chat/ChatSlice';\r\n\r\nconst ChatMsgForm = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChatMsgChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const id = useSelector((state) => state.chatReducer.chatContent);\r\n\r\n  const onChatMsgSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    dispatch(sendMsg(id, msg));\r\n    setMsg('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onChatMsgSubmit.bind()} className=\"card-body border-top\">\r\n      <div className=\"d-flex\">\r\n        <Input\r\n          type=\"text\"\r\n          className=\"form-control me-2\"\r\n          placeholder=\"Type your message\"\r\n          onChange={handleChatMsgChange.bind(null)}\r\n          value={msg}\r\n          required\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            dispatch(sendMsg(id, msg));\r\n            setMsg('');\r\n          }}\r\n          color=\"primary\"\r\n          disabled={!msg}\r\n        >\r\n          <i className=\"bi bi-send\" />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChatMsgForm;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport ChatList from '../../../components/apps/chat/ChatList';\r\nimport ChatSearch from '../../../components/apps/chat/ChatSearch';\r\nimport ChatContent from '../../../components/apps/chat/ChatContent';\r\nimport ChatMsgForm from '../../../components/apps/chat/ChatMsgForm';\r\nimport TwoColumn from '../../../components/twoColumn/TwoColumn';\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <TwoColumn\r\n          leftContent={\r\n            <>\r\n              <ChatSearch />\r\n              <ChatList />\r\n            </>\r\n          }\r\n          rightContent={\r\n            <>\r\n              <ChatContent />\r\n              <ChatMsgForm />\r\n            </>\r\n          }\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"names":["leftContent","rightContent","React","isOpen","setIsOpen","className","color","onClick","style","height","contactName","active","id","thumb","status","src","alt","width","dispatch","useDispatch","useEffect","fetchChats","chats","useSelector","state","chatSearch","filter","t","name","toLocaleLowerCase","includes","filterChats","chatReducer","chatContent","map","chat","SelectChat","chatExcerpt","excerpt","searchTerm","type","onChange","e","SearchChat","target","value","placeholder","chatDetails","close","Object","keys","chatHistory","key","k","v","useState","msg","setMsg","onSubmit","preventDefault","stopPropagation","sendMsg","bind","required","disabled","TwoColumn"],"sourceRoot":""}