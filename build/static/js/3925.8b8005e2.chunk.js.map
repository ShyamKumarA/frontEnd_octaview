{"version":3,"file":"static/js/3925.8b8005e2.chunk.js","mappings":"qIAuBA,IApBsB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxC,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWC,IAAI,KAAKC,UAAU,+BAA9B,SACGH,KAEH,UAAC,KAAD,CAAUG,UAAU,MAApB,WACE,SAAC,KAAD,CAAcA,UAAU,kBAAxB,SAA2CF,GAAY,MACvD,yBAAMF,Y,uFCNRK,EAAc,SAACC,GACnB,IAAQC,EAAaD,EAAbC,KAAMC,EAAOF,EAAPE,GACd,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAIA,OACE,6BACE,SAAC,KAAD,CAAQP,UAAU,OAAOQ,MAAM,kBAAkBJ,GAAE,kBAAaA,GAAhE,SACGD,EAAKM,QAER,SAAC,IAAD,CACEC,UAAWP,EAAKO,UAChBC,OAAQL,EACRM,OAAM,kBAAaR,GACnBS,OAXS,kBAAMN,GAAgBD,IAOjC,kCAiDN,UArCyB,WACvB,OACE,0BAIE,SAAC,IAAD,CAAeT,MAAM,UAArB,UACE,8BACG,CACC,CACEa,UAAW,MACXD,KAAM,OAER,CACEC,UAAW,SACXD,KAAM,UAER,CACEC,UAAW,OACXD,KAAM,QAER,CACEC,UAAW,QACXD,KAAM,UAERK,KAAI,SAACC,EAASC,GACd,OAAO,SAACf,EAAD,CAAqCE,KAAMY,EAASX,GAAIY,GAAtCD,EAAQL","sources":["components/ComponentCard.js","views/ui/Tooltip.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ComponentCard = ({ children, title, subtitle }) => {\r\n  return (\r\n    <Card>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n      </CardTitle>\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node\r\n};\r\n\r\nexport default ComponentCard;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { Tooltip, Button } from 'reactstrap';\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\nconst TooltipItem = (props) => {\r\n  const { item, id } = props;\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n  const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n  return (\r\n    <span>\r\n      <Button className=\"me-1\" color=\"outline-primary\" id={`Tooltip-${id}`}>\r\n        {item.text}\r\n      </Button>\r\n      <Tooltip\r\n        placement={item.placement}\r\n        isOpen={tooltipOpen}\r\n        target={`Tooltip-${id}`}\r\n        toggle={toggle}\r\n      >\r\n        Tooltip Content!\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n};\r\n\r\nconst TooltipComponent = () => {\r\n  return (\r\n    <div>\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      {/* Row*/}\r\n      {/* --------------------------------------------------------------------------------*/}\r\n      <ComponentCard title=\"Tooltip\">\r\n        <>\r\n          {[\r\n            {\r\n              placement: 'top',\r\n              text: 'Top',\r\n            },\r\n            {\r\n              placement: 'bottom',\r\n              text: 'Bottom',\r\n            },\r\n            {\r\n              placement: 'left',\r\n              text: 'Left',\r\n            },\r\n            {\r\n              placement: 'right',\r\n              text: 'Right',\r\n            },\r\n          ].map((tooltip, i) => {\r\n            return <TooltipItem key={tooltip.placement} item={tooltip} id={i} />;\r\n          })}\r\n        </>\r\n      </ComponentCard>\r\n      {/* -------------------------------------------------------------------------------- */}\r\n      {/* Row */}\r\n      {/* -------------------------------------------------------------------------------- */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipComponent;\r\n"],"names":["children","title","subtitle","tag","className","TooltipItem","props","item","id","useState","tooltipOpen","setTooltipOpen","color","text","placement","isOpen","target","toggle","map","tooltip","i"],"sourceRoot":""}