{"version":3,"file":"static/js/601.4d25ff36.chunk.js","mappings":"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","sources":["components/threeColumn/ThreeColumn.js","components/apps/email/EmailListItem.js","components/apps/email/EmailList.js","components/apps/email/EmailCompose.js","components/apps/email/EmailFilter.js","components/apps/email/EmailSearch.js","components/apps/email/EmailDetails.js","views/apps/email/Email.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\nimport { ToggleInnerRightPart } from '../../store/customizer/CustomizerSlice';\r\n\r\nconst ThreeColumn = ({ leftContent, middleContent, rightContent }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const isRightOpen = useSelector((state) => state.customizer.isInnerRightPart);\r\n\r\n  return (\r\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox threeColumn\">\r\n      <div className={`leftPart bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\r\n        <Button className=\"d-xl-none openCloseBtn\" color=\"danger\">\r\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\r\n        </Button>\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\r\n      </div>\r\n      <div className=\"middlePart flex-shrink-0\">\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{middleContent}</SimpleBar>\r\n      </div>\r\n      <div className={`rightPart bg-white ${isRightOpen ? 'showRightPart' : ''}`}>\r\n        <Button\r\n          close\r\n          onClick={() => dispatch(ToggleInnerRightPart())}\r\n          className=\"position-absolute closeRbtn d-lg-none\"\r\n        />\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{rightContent}</SimpleBar>\r\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nThreeColumn.propTypes = {\r\n  leftContent: PropTypes.node,\r\n  middleContent: PropTypes.node,\r\n  rightContent: PropTypes.node,\r\n};\r\n\r\nexport default ThreeColumn;\r\n","import React from 'react';\r\nimport { NavItem, Input, Badge } from 'reactstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ToggleInnerRightPart } from '../../../store/customizer/CustomizerSlice';\r\n\r\nconst EmailListItem = ({\r\n  id,\r\n  from,\r\n  subject,\r\n  label,\r\n  onStar,\r\n  starred,\r\n  important,\r\n  onImportant,\r\n  time,\r\n  active,\r\n  checked,\r\n  trash,\r\n  onEmailClick,\r\n  onDelete,\r\n  handlechecked,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <NavItem\r\n      onClick={onEmailClick}\r\n      className={`w-100 cursor-pointer p-3 border-bottom ${active === id ? 'bg-light' : ''}`}\r\n    >\r\n      <div className=\"d-flex mb-1 gap-2\" onClick={() => dispatch(ToggleInnerRightPart())}>\r\n        <div>\r\n          <Input\r\n            type=\"checkbox\"\r\n            id={`check${id}`}\r\n            onChange={handlechecked}\r\n            className=\"custom-control-input\"\r\n          />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <h5 className=\"mb-0\">{from}</h5>\r\n          <span className=\"text-truncate text-muted w-100 d-block\">{subject}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex mt-2 align-items-center gap-2 ms-3 ps-2\">\r\n        <Badge\r\n          color={\r\n            (label === 'Promotional' ? 'warning' : '') +\r\n            (label === 'Social' ? 'success' : '') +\r\n            (label === 'Health' ? 'danger' : '')\r\n          }\r\n        >\r\n          {label}\r\n        </Badge>\r\n        <i\r\n          className={`bi ${starred ? 'bi-star-fill' : 'bi-star'} ${starred ? 'text-warning' : ''}`}\r\n          onClick={onStar}\r\n        />\r\n        <i\r\n          className={`bi ${important ? 'bi-bookmark-fill' : 'bi-bookmark'} ${\r\n            important ? 'text-warning' : ''\r\n          }`}\r\n          onClick={onImportant}\r\n        />\r\n        {checked && !trash ? <i className=\"bi-trash\" onClick={onDelete} /> : ''}\r\n        <div className=\"ms-auto\">\r\n          <small className=\"text-muted font-12\">{time}</small>\r\n        </div>\r\n      </div>\r\n    </NavItem>\r\n  );\r\n};\r\n\r\nEmailListItem.propTypes = {\r\n  id: PropTypes.number,\r\n  from: PropTypes.string,\r\n  subject: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onStar: PropTypes.func,\r\n  starred: PropTypes.bool,\r\n  important: PropTypes.bool,\r\n  onImportant: PropTypes.func,\r\n  time: PropTypes.string,\r\n  active: PropTypes.any,\r\n  checked: PropTypes.any,\r\n  onDelete: PropTypes.func,\r\n  trash: PropTypes.bool,\r\n  handlechecked: PropTypes.func,\r\n  onEmailClick: PropTypes.func,\r\n};\r\n\r\nexport default EmailListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Nav } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport EmailListItem from './EmailListItem';\r\nimport {\r\n  fetchEmails,\r\n  SelectEmail,\r\n  starEmail,\r\n  importantEmail,\r\n  deleteEmail,\r\n  checkEmail,\r\n} from '../../../store/apps/email/EmailSlice';\r\n\r\nconst EmailList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmails());\r\n  }, [dispatch]);\r\n  const getVisibleEmail = (emails, filter, emailSearch) => {\r\n    switch (filter) {\r\n      case 'inbox':\r\n        return emails.filter(\r\n          (c) => c.inbox && !c.trash && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'sent':\r\n        return emails.filter(\r\n          (c) => c.sent && !c.trash && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'draft':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.draft && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'spam':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.spam && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'trash':\r\n        return emails.filter((c) => c.trash && c.from.toLocaleLowerCase().includes(emailSearch));\r\n\r\n      case 'starred':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.starred && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'important':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.important && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'Social':\r\n        return emails.filter(\r\n          (c) =>\r\n            !c.trash && c.label === 'Social' && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n      case 'Health':\r\n        return emails.filter(\r\n          (c) =>\r\n            !c.trash && c.label === 'Health' && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n      case 'Promotional':\r\n        return emails.filter(\r\n          (c) =>\r\n            !c.trash &&\r\n            c.label === 'Promotional' &&\r\n            c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      default:\r\n        throw new Error(`Unknown filter: ${filter}`);\r\n    }\r\n  };\r\n  const emails = useSelector((state) =>\r\n    getVisibleEmail(\r\n      state.emailReducer.emails,\r\n      state.emailReducer.currentFilter,\r\n      state.emailReducer.emailSearch,\r\n    ),\r\n  );\r\n  const active = useSelector((state) => state.emailReducer.emailContent);\r\n  return (\r\n    <>\r\n      <Nav>\r\n        {emails.map((email) => (\r\n          <EmailListItem\r\n            key={email.id}\r\n            active={active}\r\n            {...email}\r\n            handlechecked={() => dispatch(checkEmail(email.id))}\r\n            onDelete={() => dispatch(deleteEmail(email.id))}\r\n            onEmailClick={() => dispatch(SelectEmail(email.id))}\r\n            onStar={() => dispatch(starEmail(email.id))}\r\n            onImportant={() => dispatch(importantEmail(email.id))}\r\n          />\r\n        ))}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nconst EmailCompose = () => {\r\n  const [composeModal, setComposeModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setComposeModal(!composeModal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color=\"danger\" onClick={toggle} block>\r\n        Compose\r\n      </Button>\r\n      <Modal isOpen={composeModal} size=\"lg\">\r\n        <ModalHeader toggle={toggle}>Compose New Message</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <div className=\"form-body\">\r\n              <Row>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"to\">To</Label>\r\n                    <Input type=\"text\" id=\"to\" name=\"to\" />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"cc\">CC</Label>\r\n                    <Input type=\"text\" id=\"cc\" name=\"cc\" />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"subject\">Subject</Label>\r\n                    <Input type=\"text\" id=\"subject\" name=\"subject\" />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"msg\">Email Message</Label>\r\n                    <Input type=\"textarea\" name=\"msg\" id=\"msg\" />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <FormGroup>\r\n                <Label>Attachment</Label>\r\n                <Input type=\"file\" className=\"form-control-file\" id=\"projectinput8\" />\r\n              </FormGroup>\r\n            </div>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>\r\n            Send\r\n          </Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailCompose;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { setVisibilityFilter } from '../../../store/apps/email/EmailSlice';\r\nimport EmailCompose from './EmailCompose';\r\n\r\nconst filterData = [\r\n  {\r\n    filterbyTitle: 'Filter By',\r\n  },\r\n  {\r\n    name: 'inbox',\r\n    icon: 'bi-inbox',\r\n  },\r\n  {\r\n    name: 'sent',\r\n    icon: 'bi-send',\r\n  },\r\n  {\r\n    name: 'draft',\r\n    icon: 'bi-archive',\r\n  },\r\n  {\r\n    name: 'spam',\r\n    icon: 'bi-exclamation-circle',\r\n  },\r\n  {\r\n    name: 'trash',\r\n    icon: 'bi-trash',\r\n  },\r\n  {\r\n    devider: true,\r\n  },\r\n  {\r\n    name: 'starred',\r\n    icon: 'bi-star',\r\n  },\r\n  {\r\n    name: 'important',\r\n    icon: 'bi-bookmark',\r\n  },\r\n  {\r\n    devider: true,\r\n    id: 1,\r\n  },\r\n  {\r\n    name: 'Promotional',\r\n    icon: 'bi-folder',\r\n  },\r\n  {\r\n    name: 'Social',\r\n    icon: 'bi-folder',\r\n  },\r\n  {\r\n    name: 'Health',\r\n    icon: 'bi-folder',\r\n  },\r\n];\r\n\r\nconst EmailFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const active = useSelector((state) => state.emailReducer.currentFilter);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-3 border-bottom\">\r\n        <EmailCompose />\r\n      </div>\r\n      <ListGroup flush>\r\n        {filterData.map((filter) => {\r\n          if (filter.filterbyTitle) {\r\n            return (\r\n              <h6 className=\"px-3 pt-3\" key={filter.filterbyTitle}>\r\n                {filter.filterbyTitle}\r\n              </h6>\r\n            );\r\n          }\r\n          if (filter.devider) {\r\n            return <div className=\"border-bottom py-2 mb-2\" key={`${filter.id}`} />;\r\n          }\r\n          return (\r\n            <ListGroupItem\r\n              href=\"#\"\r\n              tag=\"a\"\r\n              key={filter.name}\r\n              className={\r\n                active === `${filter.name}`\r\n                  ? 'bg-light py-3 border-0 text-capitalize'\r\n                  : 'py-3 border-0 text-capitalize'\r\n              }\r\n              onClick={() => dispatch(setVisibilityFilter(`${filter.name}`))}\r\n            >\r\n              <i className={`bi ${filter.icon} mx-1`} /> {filter.name}\r\n            </ListGroupItem>\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailFilter;\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SearchEmail } from '../../../store/apps/email/EmailSlice';\r\n\r\nconst EmailSearch = () => {\r\n  const searchTerm = useSelector((state) => state.emailReducer.emailSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom d-flex\">\r\n      <Button close className=\"d-xs-block d-xl-none me-2\" />\r\n      <Form className=\"flex-grow-1\">\r\n        <Input\r\n          className=\"form-control \"\r\n          id=\"searchEmail\"\r\n          name=\"searchEmail\"\r\n          type=\"text\"\r\n          onChange={(e) => dispatch(SearchEmail(e.target.value))}\r\n          value={searchTerm}\r\n          placeholder=\"Search Email...\"\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailSearch;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Badge, Button } from 'reactstrap';\r\n\r\nconst EmailDetails = () => {\r\n  const emailDetail = useSelector(\r\n    (state) => state.emailReducer.emails[state.emailReducer.emailContent - 1],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {emailDetail ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center p-3 border-bottom\">\r\n              <div className=\"\">\r\n                <img src={emailDetail.thumbnail} alt=\"user\" className=\"rounded-circle\" width=\"46\" />\r\n              </div>\r\n              <div className=\"mx-3\">\r\n                <h5 className=\"mb-0\">{emailDetail.from}</h5>\r\n                <Badge\r\n                  color={\r\n                    (emailDetail.label === 'Promotional' ? 'warning' : '') +\r\n                    (emailDetail.label === 'Social' ? 'success' : '') +\r\n                    (emailDetail.label === 'Health' ? 'danger' : '')\r\n                  }\r\n                >\r\n                  {emailDetail.label}\r\n                </Badge>\r\n                &nbsp;&nbsp;\r\n                <small>To: {emailDetail.To}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 border-bottom\">\r\n              <h5 className=\"mb-0 font-16 font-medium\">{emailDetail.subject}</h5>\r\n            </div>\r\n            <div\r\n              className=\"p-4 pb-3\"\r\n              dangerouslySetInnerHTML={{ __html: emailDetail.emailContent }}\r\n            />\r\n            <Button className=\"mx-4\" color=\"primary\" size=\"sm\" outline>\r\n              Reply\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          'Please Select Email'\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailDetails;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport ThreeColumn from '../../../components/threeColumn/ThreeColumn';\r\nimport EmailList from '../../../components/apps/email/EmailList';\r\nimport EmailFilter from '../../../components/apps/email/EmailFilter';\r\nimport EmailSearch from '../../../components/apps/email/EmailSearch';\r\nimport EmailDetails from '../../../components/apps/email/EmailDetails';\r\n\r\nconst Email = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <ThreeColumn\r\n          leftContent={<EmailFilter />}\r\n          middleContent={\r\n            <>\r\n              <EmailSearch />\r\n              <EmailList />\r\n            </>\r\n          }\r\n          rightContent={<EmailDetails />}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n"],"names":["leftContent","middleContent","rightContent","React","isOpen","setIsOpen","dispatch","useDispatch","isRightOpen","useSelector","state","customizer","isInnerRightPart","className","color","onClick","style","height","close","ToggleInnerRightPart","id","from","subject","label","onStar","starred","important","onImportant","time","active","checked","trash","onEmailClick","onDelete","handlechecked","type","onChange","useEffect","fetchEmails","emails","filter","emailSearch","c","inbox","toLocaleLowerCase","includes","sent","draft","spam","Error","getVisibleEmail","emailReducer","currentFilter","emailContent","map","email","checkEmail","deleteEmail","SelectEmail","starEmail","importantEmail","useState","composeModal","setComposeModal","toggle","block","size","md","sm","for","name","filterData","filterbyTitle","icon","devider","flush","href","tag","setVisibilityFilter","searchTerm","e","SearchEmail","target","value","placeholder","emailDetail","src","thumbnail","alt","width","To","dangerouslySetInnerHTML","__html","outline","ThreeColumn"],"sourceRoot":""}