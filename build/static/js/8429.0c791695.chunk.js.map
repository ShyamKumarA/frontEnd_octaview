{"version":3,"file":"static/js/8429.0c791695.chunk.js","mappings":"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","sources":["components/dashboard/minimalDashboard/AddUser.js","components/dashboard/minimalDashboard/UserList.js","views/dashboards/UsersList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Label,\n  Button,\n  Input,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport user1 from '../../../assets/images/users/user2.jpg';\nimport { addUser } from '../../../store/userSlice';\n\nconst AddUser = ({ click }) => {\n  const dispatch = useDispatch();\n\n  const [values, setValues] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    address: '',\n    password: '',\n    confirmPassword: '',\n    txnPassword: '',\n    confirmTxnPassword: '',\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Check if passwords match\n    if (values.password !== values.confirmPassword || values.txnPassword !== values.confirmTxnPassword) {\n      alert('Passwords do not match.');\n      return;\n    }\n\n    const userPayload = {\n      username: values.name,\n      phone: values.phone,\n      email: values.email,\n      address: values.address,\n      password: values.password,\n      transactionPassword: values.txnPassword,\n      confirmPassword: values.confirmPassword,\n      confirmTxnPassword: values.confirmTxnPassword,\n    };\n\n    // Dispatch addUser action\n    try {\n      await dispatch(addUser(userPayload));\n      // Reset form values\n      setValues({\n        name: '',\n        phone: '',\n        email: '',\n        address: '',\n        password: '',\n        confirmPassword: '',\n        txnPassword: '',\n        confirmTxnPassword: '',\n      });\n\n      // Show success toast\n      toast.success('User added successfully. Username and password sent to your email.');\n    } catch (error) {\n      // Show error toast\n      toast.error('Failed to add user. Please try again.');\n    }\n\n    // Close modal or perform other necessary actions\n    click();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n    <ModalBody>\n      <Row>\n        <Col md={6} className=\"text-center\">\n          <img src={user1} className=\"rounded-circle\" alt={user1} width=\"100\" />\n        </Col>\n        <Col md={6}>\n            <FormGroup>\n              <Label for=\"firstName\">Name</Label>\n              <Input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"username\"\n                id=\"firstname\"\n                value={values.name}\n                onChange={(e) => setValues({ ...values, name: e.target.value })}\n                required\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone</Label>\n              <Input\n                className=\"form-control\"\n                type=\"phone\"\n                name=\"phone\"\n                id=\"phone\"\n                value={values.phone}\n                onChange={(e) => setValues({ ...values, phone: e.target.value })}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n          <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                value={values.email}\n                onChange={(e) => setValues({ ...values, email: e.target.value })}\n              />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n          <FormGroup>\n              <Label for=\"address\">Address</Label>\n              <Input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"address\"\n                id=\"address\"\n                value={values.address}\n                onChange={(e) => setValues({ ...values, address: e.target.value })}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"password\">Password</Label>\n              <Input\n                className=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={values.password}\n                onChange={(e) => setValues({ ...values, password: e.target.value })}\n              />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"email\">Txn Password</Label>\n              <Input\n                className=\"form-control\"\n                type=\"password\"\n                name=\"txnPassword\"\n                id=\"txnPassword\"\n                value={values.txnPassword}\n                onChange={(e) => setValues({ ...values, txnPassword: e.target.value })}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"address\">Confirm Password</Label>\n              <Input\n                className=\"form-control\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                id=\"confirmPassword\"\n                value={values.confirmPassword}\n                onChange={(e) => setValues({ ...values, confirmPassword: e.target.value })}\n              />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"notes\">Confirm txnPassword</Label>\n              <Input\n                className=\"form-control\"\n                type=\"password\"\n                name=\"confirmTxnPassword\"\n                id=\"confirmTxnPassword\"\n                value={values.confirmTxnPassword}\n                onChange={(e) => setValues({ ...values, confirmTxnPassword: e.target.value })}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"primary\"\n          type=\"submit\"\n          disabled={\n            values.name.length === 0 ||\n            values.confirmTxnPassword.length === 0 ||\n            values.password !== values.confirmPassword ||\n            values.txnPassword !== values.confirmTxnPassword\n          }\n        >\n          Add Contact\n        </Button>\n      </ModalFooter>\n    </Form>\n  );\n};\n\nAddUser.propTypes = {\n  click: PropTypes.any,\n};\n\nexport default AddUser;","/* eslint-disable no-underscore-dangle */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardTitle, Input, Modal, ModalHeader, Table } from 'reactstrap';\nimport { userListManage } from '../../../store/userSlice';\nimport AddUser from './AddUser';\n\nconst UserList = () => {\n  const dispatch = useDispatch();\n  const { data } = useSelector(state => state.userListManageReducer);\n  const [selectedChild, setSelectedChild] = useState('child1');\n  const [modal, setModal] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    dispatch(userListManage());\n  }, [dispatch]);\n\n  const getChildData = () => {\n    if (!data) return [];\n    return data[selectedChild] || [];\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n  const filteredData = getChildData().filter(row =>\n    Object.values(row).some(value =>\n      value.toString().toLowerCase().includes(searchQuery.toLowerCase())\n    )\n  );\n\n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <div>\n            <CardTitle tag=\"h4\">Users Overview</CardTitle>\n          </div>\n          <div className=\"mt-4 mt-md-0\">\n            <Input\n              type=\"select\"\n              className=\"custom-select\"\n              value={selectedChild}\n              onChange={e => setSelectedChild(e.target.value)}\n            >\n              <option value=\"child1\">Level 1</option>\n              <option value=\"child2\">Level 2</option>\n              <option value=\"child3\">Level 3</option>\n            </Input>\n          </div>\n        </div>\n      </CardBody>\n      <CardBody className=\"bg-light d-flex align-items-center justify-content-between\">\n        <div className=\"mt-4 mt-md-0\">\n          <div className=\"p-3 border-bottom\">\n            <Button color=\"danger\" block onClick={toggle}>\n              Add New\n            </Button>\n          </div>\n        </div>\n        <Input\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n      </CardBody>\n      <div className=\"table-responsive\">\n        <Table className=\"text-nowrap align-middle mb-0\" hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Package</th>\n              <th>Mobile</th>\n              <th>Sponsor</th>\n              <th>Action</th>\n              <th>Details</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData.map((tdata, index) => (\n              <tr key={tdata._id} className=\"border-top\">\n                <td>\n                  <h6 className=\"mb-0\">{index + 1}</h6>\n                </td>\n                <td>\n                  <h6 className=\"mb-0\">{tdata.username}</h6>\n                </td>\n                <td><h6 className=\"mb-0\">{tdata.packageName}</h6></td>\n                <td><h6 className=\"mb-0\">{tdata.phone}</h6></td>\n                <td><h6 className=\"mb-0\">{tdata.ownSponserId}</h6></td>\n\n                <td>\n                  <Link\n                    to={`/users-tree-list/${tdata._id}`}\n                    className=\"hidden xs:block ml-2\"\n                  >\n                    <Button className=\"btn\" color=\"success\">\n                      View Tree\n                    </Button>\n                  </Link>\n                </td>\n                <td>\n                  <Link\n                    to={`/user-profile/${tdata._id}`}\n                    className=\"hidden xs:block ml-2\"\n                  >\n                    <Button className=\"btn\" color=\"info\">\n                      View Details\n                    </Button>\n                  </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n      <Modal isOpen={modal} toggle={toggle} size=\"md\">\n        <ModalHeader toggle={toggle}>Add Contact</ModalHeader>\n        <AddUser click={toggle} />\n      </Modal>\n    </Card>\n  );\n};\n\nexport default UserList;\n","import { Row, Col } from 'reactstrap';\nimport UserList from '../../components/dashboard/minimalDashboard/UserList';\n\n\nconst UsersList = () => {\n  return (\n    <>\n      {/*********************Sales Overview ************************/}\n      <Row>\n        <Col lg=\"12\">\n          <UserList />\n        </Col>\n      </Row>\n      \n    </>\n  );\n};\n\nexport default UsersList;"],"names":["click","dispatch","useDispatch","useState","name","phone","email","address","password","confirmPassword","txnPassword","confirmTxnPassword","values","setValues","handleSubmit","e","preventDefault","alert","userPayload","username","transactionPassword","addUser","toast","onSubmit","md","className","src","user1","alt","width","for","type","id","value","onChange","target","required","color","disabled","length","data","useSelector","state","userListManageReducer","selectedChild","setSelectedChild","modal","setModal","searchQuery","setSearchQuery","useEffect","userListManage","toggle","filteredData","filter","row","Object","some","toString","toLowerCase","includes","tag","block","onClick","placeholder","hover","map","tdata","index","packageName","ownSponserId","to","_id","isOpen","size","lg"],"sourceRoot":""}