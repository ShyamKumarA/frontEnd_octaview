{"version":3,"file":"static/js/3495.2af7b8d9.chunk.js","mappings":"oPAkHA,EA1GqB,SAAC,GAAU,IAATA,EAAQ,EAARA,GACfC,GAAWC,EAAAA,EAAAA,MACTC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,6BAAtCH,KAER,GAA0CI,EAAAA,EAAAA,UAAS,UAAnD,eAAOC,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAmBX,MAC3B,CAACC,EAASD,IAkBb,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,iBAAKY,UAAU,oDAAf,WACE,0BACE,SAAC,KAAD,CAAWC,IAAI,KAAf,oCAEF,gBAAKD,UAAU,eAAf,UACF,UAAC,KAAD,CACEE,KAAK,SACLF,UAAU,gBACVG,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAiBQ,EAAEC,OAAOH,QAJ7C,WAME,mBAAQA,MAAM,SAAd,sBACA,mBAAQA,MAAM,SAAd,sBACA,mBAAQA,MAAM,SAAd,gCAMJ,SAAC,KAAD,CAAUH,UAAU,gEAGpB,gBAAKA,UAAU,mBAAf,UACE,UAAC,KAAD,CAAOA,UAAU,gCAAgCO,OAAK,EAAtD,WACE,4BACE,2BACE,+BACA,kCACA,qCACA,oCACA,qCACA,oCACA,0CAGJ,2BACDhB,GAtDc,WACnB,IAAKA,EAAM,MAAO,GAClB,OAAQK,GACN,IAAK,SACH,OAAOL,EAAKiB,QAAU,GACxB,IAAK,SACH,OAAOjB,EAAKkB,QAAU,GACxB,IAAK,SACH,OAAOlB,EAAKmB,QAAU,GACxB,QACE,MAAO,IA4CEC,GAAeC,KAAI,SAACC,EAAOC,GAAR,OAC1B,gBAAoBd,UAAU,aAA9B,WACM,yBACE,eAAIA,UAAU,OAAd,SAAsBc,EAAM,OAE9B,yBACE,eAAId,UAAU,OAAd,SAAsBa,EAAME,cAE9B,yBAAI,eAAIf,UAAU,OAAd,SAAsBa,EAAMG,iBAChC,yBAAI,eAAIhB,UAAU,OAAd,SAAsBa,EAAMI,WAChC,yBAAI,eAAIjB,UAAU,OAAd,SAAsBa,EAAMK,kBAEhC,yBACA,SAAC,KAAD,CACgBC,GAAE,2BAAsBN,EAAMO,KAC9BpB,UAAU,uBAF1B,UAIA,SAAC,KAAD,CAAQA,UAAU,MAAOqB,MAAM,UAA/B,4BAKF,yBACA,SAAC,KAAD,CACkBF,GAAE,wBAAmBN,EAAMO,KAC3BpB,UAAU,uBAF5B,UAIA,SAAC,KAAD,CAAQA,UAAU,OAAQqB,MAAM,OAAhC,gCA1BKR,EAAMO,mBCrDzB,EAhBqB,WACnB,IAAOE,GAAUC,EAAAA,EAAAA,MAAVD,OAEP,OADAE,QAAQC,IAAR,iBAAsBH,KAEpB,+BAEE,SAAC,KAAD,WACE,SAAC,KAAD,CAAKI,GAAG,KAAR,UACE,SAAC,EAAD,CAActC,GAAIkC","sources":["components/dashboard/minimalDashboard/UserListTree.js","views/dashboards/ViewUserTree.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardTitle, Input, Table } from 'reactstrap';\nimport { userTreeListManage } from '../../../store/userSlice';\n\n// eslint-disable-next-line react/prop-types\nconst UserListTree = ({id}) => {\n  const dispatch = useDispatch();\n  const { data } = useSelector((state) => state.userTreeListManageReducer);\n  \n  const [selectedChild, setSelectedChild] = useState('child1');\n\n  useEffect(() => {\n    dispatch(userTreeListManage(id));\n  }, [dispatch,id]);\n\n\n  const getChildData = () => {\n    if (!data) return []; // Add a null check for data\n    switch (selectedChild) {\n      case 'child1':\n        return data.child1 || [];\n      case 'child2':\n        return data.child2 || [];\n      case 'child3':\n        return data.child3 || [];\n      default:\n        return [];\n    }\n  };\n\n  \n  return (\n    <Card>\n      <CardBody>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <div>\n            <CardTitle tag=\"h4\">Users Tree Overview</CardTitle>\n          </div>\n          <div className=\"mt-4 mt-md-0\">\n        <Input\n          type=\"select\"\n          className=\"custom-select\"\n          value={selectedChild}\n          onChange={(e) => setSelectedChild(e.target.value)}\n        >\n          <option value=\"child1\">Child 1</option>\n          <option value=\"child2\">Child 2</option>\n          <option value=\"child3\">Child 3</option>\n        </Input>\n      </div>\n\n        </div>\n      </CardBody>\n      <CardBody className=\"bg-light d-flex align-items-center justify-content-between\">\n        \n      </CardBody>\n      <div className=\"table-responsive\">\n        <Table className=\"text-nowrap align-middle mb-0\" hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Package</th>\n              <th>Mobile</th>\n              <th>Sponser</th>\n              <th>Action</th>\n              <th>Details</th>\n            </tr>\n          </thead>\n          <tbody>\n        {data && getChildData().map((tdata, index) => (\n          <tr key={tdata._id} className=\"border-top\">\n                <td>\n                  <h6 className=\"mb-0\">{index+1}</h6>\n                </td>\n                <td>\n                  <h6 className=\"mb-0\">{tdata.username}</h6>\n                </td>\n                <td><h6 className=\"mb-0\">{tdata.packageName}</h6></td>\n                <td><h6 className=\"mb-0\">{tdata.phone}</h6></td>\n                <td><h6 className=\"mb-0\">{tdata.ownSponserId}</h6></td>\n\n                <td>\n                <Link\n                                to={`/users-tree-list/${tdata._id}`}\n                                className=\"hidden xs:block ml-2\"\n                              >\n                <Button className=\"btn\"  color=\"success\" >\n                View Tree\n              </Button>\n              </Link>\n              </td>\n              <td>\n              <Link\n                                to={`/user-details/${tdata._id}`}\n                                className=\"hidden xs:block ml-2\"\n                              >\n              <Button className=\"btn \"  color=\"info\" >\n                View Details\n              </Button>\n              </Link>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </Card>\n  );\n};\n\nexport default UserListTree;\n","import { Row, Col } from 'reactstrap';\nimport { useParams } from 'react-router-dom';\nimport UserListTree from '../../components/dashboard/minimalDashboard/UserListTree';\n\n\nconst ViewUserTree = () => {\n  const {userId} = useParams();\n  console.log(`userId:${userId}`);\n  return (\n    <>\n      {/*********************Sales Overview ************************/}\n      <Row>\n        <Col lg=\"12\">\n          <UserListTree id={userId} />\n        </Col>\n      </Row>\n      \n    </>\n  );\n};\n\nexport default ViewUserTree;\n"],"names":["id","dispatch","useDispatch","data","useSelector","state","userTreeListManageReducer","useState","selectedChild","setSelectedChild","useEffect","userTreeListManage","className","tag","type","value","onChange","e","target","hover","child1","child2","child3","getChildData","map","tdata","index","username","packageName","phone","ownSponserId","to","_id","color","userId","useParams","console","log","lg"],"sourceRoot":""}